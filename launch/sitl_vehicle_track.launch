<?xml version="1.0"?>

<launch>
  <arg name="mav_name" default="quad"/>
  <arg name="fcu_url" default="udp://:14540@127.0.0.1:14557"/>
  <arg name="gcs_url" default="" />
  <arg name="tgt_system" default="1" />
  <arg name="tgt_component" default="1" />
  <arg name="command_input" default="2" />
  <arg name="gazebo_simulation" default="true" />
  <arg name="visualization" default="true"/>
  <arg name="log_output" default="screen" />
  <arg name="fcu_protocol" default="v2.0" />
  <arg name="respawn_mavros" default="false" />

  
  <node pkg="quad_perch" type="upenn_control" name="upenn_control" output="screen">
      <param name="mav_name" type="string" value="$(arg mav_name)" />
          <remap from="command/bodyrate_command" to="/mavros/setpoint_raw/attitude"/>
          <param name="ctrl_mode" value="$(arg command_input)" />
          <param name="enable_sim" value="$(arg gazebo_simulation)" />
          <param name="enable_gazebo_state" value="true"/>
          <param name="take_off_height" value="10"/>
          <param name="exec_cont" value="1"/>
          
  </node>

  <node pkg="quad_perch" type="vehicle_track_traj" name="vehicle_track_traj" output="screen">
  </node>

  <node pkg="quad_perch" type="apriltag_data_transform" name="apriltag_data_transform" output="screen">
  </node>

  <include file="$(find mavros)/launch/node.launch">
      <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
      <arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />

      <arg name="fcu_url" value="$(arg fcu_url)" />
      <arg name="gcs_url" value="$(arg gcs_url)" />
      <arg name="tgt_system" value="$(arg tgt_system)" />
      <arg name="tgt_component" value="$(arg tgt_component)" />
      <arg name="log_output" value="$(arg log_output)" />
      <arg name="fcu_protocol" value="$(arg fcu_protocol)" />
      <arg name="respawn_mavros" default="$(arg respawn_mavros)" />
  </include>

  <include file="$(find px4)/launch/posix_sitl.launch">
      <arg name="vehicle" value="$(arg mav_name)"/>
  </include>

  <arg name="x" default="5.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.1"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <arg name="namespace" default="/"/>
  <arg name="cmd_timeout" default="0.5"/>

  <include file="$(find ackermann_vehicle_description)/launch/ackermann_vehicle.launch">
    <arg name="namespace" value="$(arg namespace)"/>
  </include>

  <group ns="$(arg namespace)">
    <!-- Create the world. -->
    <!--include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(arg world_name)"/>
    </include-->

    <!-- Spawn the vehicle. -->
    <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
          args="-urdf -param robot_description -model ackermann_vehicle
                -gazebo_namespace /$(arg namespace)/gazebo
                -x $(arg x) -y $(arg y) -z $(arg z)
                -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

    <!-- Load the joint controllers. One of these publishes the joint states
         to joint_states. -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"
          args="$(find ackermann_vehicle_gazebo)/config/em_3905_joint_ctrlr_params.yaml"/>

    <!-- Control the steering, axle, and shock absorber joints. -->
    <node name="ackermann_controller" pkg="ackermann_vehicle_gazebo"
          type="ackermann_controller">
      <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
      <rosparam file="$(find ackermann_vehicle_gazebo)/config/em_3905_ackermann_ctrlr_params.yaml" command="load"/>
    </node>

    <node name="ackermann_traj" pkg="ackermann_vehicle_gazebo" type="ackermann_traj" output="screen"/>

  </group>

  <include file="$(find robot_localization)/launch/ekf_template.launch"/>

  <node name="image_proc" pkg="image_proc" type="image_proc" ns="/quad/usb_cam"/>


  <include file="$(find apriltag_ros)/launch/continuous_detection.launch"/>


  <!--node pkg="rosbag" type="record" name="rosbag_data" respawn="true" output="screen" args="-o /home/abhip/catkin_ws/src/quad_perch/bag/vehicle_track /mavros/local_position/pose /reference/flatsetpoint /mavros/local_position/velocity_local /mavros/setpoint_raw/attitude" /-->

  <node pkg="rosbag" type="record" name="rosbag_data" respawn="true" output="screen" args="-o /home/abhip/catkin_ws/src/quad_perch/bag/vehicle_track /reference/flatsetpoint /ugv/pose /odometry/filtered /mavros/local_position/pose /mavros/local_position/velocity_local" />


</launch>
